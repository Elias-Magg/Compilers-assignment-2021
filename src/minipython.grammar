/*
* Test Comments
*/

Package minipython;

Helpers
	digit = ['0' .. '9'];
	letter = ['a' .. 'z']|['A' .. 'Z']; 
	cr = 13; 
	lf = 10;
	all = [0..127]; 
	eol = lf | cr | cr lf ;
	not_eol = [all - [cr + lf]]; 

Tokens
	tab = 9;
	plus = '+';
	minus = '-';
	mult = '*';
	dmult = '**';
	div = '/';
	assign = '=';
	exclam = '!';
	dictt = 'dict';
	def = 'def';
	logic_plus = '&&';
	l_par = '(';
	r_par = ')';
	l_br = '[';
	r_br = ']';
	comma=',';
	qmark = '?';
	gqmark = ';';
	if = 'if';
	elif = 'elif';
	else = 'else';
	while = 'while';
	print = 'print';
	return = 'return';
	assert='assert';
	less = '<';
	great = '>';
	true = 'true';
	semi = ':';
	false = 'false';
	quote = '"';
	import = 'import';
	as = 'as';
	from = 'from';
	in='in';
	dot = '.'
	and = 'and';
	or = 'or';
	not = 'not';
	none = 'None'
	geq = '>='
	leq = '<='
	neq = '!='
	equals = '=='
	merge_minus='-=';
	merge_plus='+=';
	merge_divesion='/=';a
	blank = (' ' | lf | cr);
	line_comment = '#' not_eol* eol; 
	number = digit+ | (digit+ '.' digit+);
	id = letter (letter | digit)*;
	string = '"'not_eol* '"';

Ignored Tokens
	blank, line_comment;


Productions
	programme = commands*;

	commands ={stat} statement|
				 {expr}expression;



	statement ={if}tab* if  comparison semi statement |
				  {assign}tab* id eq expression |
				  {print}tab* print expression;


	comparison = {true} true|
					 {false} false|
					 {lessc} [lpar]:expression less [rpar]:expression|
					 {greatc}[lpar]:expression great [rpar]:expression;


	expression = {multiplication} multiplication |
					{addition} expression plus multiplication|
					{subtraction} expression minus multiplication;

	multiplication = {something} something |
						  {multiplication} multiplication mult something;


	something ={identifier}id|
				  {numb}number|
				  {par} l_par expression r_par;


	/* REDEFINITION ERROR - idio onoma enallaktikwn -> {greatc}
	*comparison = {true} true|
	*				 {false} false|
	*				 {greatc} [lpar]:expression less [rpar]:expression|
	*				 {greatc}[lpar]:expression great [rpar]:expression;
	*/

	/*
	  SHIFT/REDUCE conflict
		expression = {multiplication} multiplication |
					{addition} [e1]:expression plus [e2]:expression|
					{subtraction} expression minus multiplication;
	*/


	/*
	* REDEFINITION ERROR - idio onoma kanona
	* 	comparison ={if}tab* if  comparison semi statement |
	*			  {assign}tab* id eq expression |
	*			  {print}tab* print expression;
	*
	*
	*/


	/*
	* REDUCE/REDUCE conflict - dyo kanones idies enallaktikes
	* anagontai ston idio kanona-patera (pou einai o multiplication)
	*
	*multiplication = {something} something |
	*				 {s1} something1 |
	*				 {multiplication} multiplication mult something;
	*
	*something ={identifier}id|
	*		 	  	   {numb}number|
	*			       {par} l_par expression r_par;
	*
	*something1 ={identifier}id|
	*		 	  	   {numb}number|
	*			       {par} l_par expression r_par;
	*
	*/



