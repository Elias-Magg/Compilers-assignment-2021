/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AManyArgument extends PArgument
{
    private PArgument _a1_;
    private PArgument _a2_;

    public AManyArgument()
    {
    }

    public AManyArgument(
        PArgument _a1_,
        PArgument _a2_)
    {
        setA1(_a1_);

        setA2(_a2_);

    }
    public Object clone()
    {
        return new AManyArgument(
            (PArgument) cloneNode(_a1_),
            (PArgument) cloneNode(_a2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAManyArgument(this);
    }

    public PArgument getA1()
    {
        return _a1_;
    }

    public void setA1(PArgument node)
    {
        if(_a1_ != null)
        {
            _a1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _a1_ = node;
    }

    public PArgument getA2()
    {
        return _a2_;
    }

    public void setA2(PArgument node)
    {
        if(_a2_ != null)
        {
            _a2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _a2_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_a1_)
            + toString(_a2_);
    }

    void removeChild(Node child)
    {
        if(_a1_ == child)
        {
            _a1_ = null;
            return;
        }

        if(_a2_ == child)
        {
            _a2_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_a1_ == oldChild)
        {
            setA1((PArgument) newChild);
            return;
        }

        if(_a2_ == oldChild)
        {
            setA2((PArgument) newChild);
            return;
        }

    }
}
