/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AImportStatement extends PStatement
{
    private PImportPackage _importPackage_;

    public AImportStatement()
    {
    }

    public AImportStatement(
        PImportPackage _importPackage_)
    {
        setImportPackage(_importPackage_);

    }
    public Object clone()
    {
        return new AImportStatement(
            (PImportPackage) cloneNode(_importPackage_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAImportStatement(this);
    }

    public PImportPackage getImportPackage()
    {
        return _importPackage_;
    }

    public void setImportPackage(PImportPackage node)
    {
        if(_importPackage_ != null)
        {
            _importPackage_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _importPackage_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_importPackage_);
    }

    void removeChild(Node child)
    {
        if(_importPackage_ == child)
        {
            _importPackage_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_importPackage_ == oldChild)
        {
            setImportPackage((PImportPackage) newChild);
            return;
        }

    }
}
